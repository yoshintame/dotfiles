[
  // Task
  {
    "key": "cmd+t",
    "command": "workbench.action.tasks.runTask"
  },

  // Git Project Manager
  {
    "key": "shift+cmd+o",
    "command": "gitProjectManager.openProjectNewWindow"
  },
  {
    "key": "alt+cmd+n",
    "command": "-gitProjectManager.openProjectNewWindow"
  },

  // Toggle Maximized Panel Terminal
  {
    "key": "cmd+e",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.toggleMaximizedPanel",
        "workbench.action.terminal.focus"
      ]
    }
  },
  {
    "key": "cmd+e",
    "command": "runCommands",
    "args": {
      "commands": [
        "workbench.action.toggleMaximizedPanel",
        "workbench.action.closePanel"
      ]
    },
    "when": "focusedView == terminal"
  },

  // Terminal tab actions
  {
    "key": "cmd+t",
    "command": "workbench.action.terminal.new",
    "when": "focusedView == terminal"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "focusedView == terminal"
  },
  {
    "key": "cmd+1",
    "command": "workbench.action.terminal.focusAtIndex1",
    "when": "focusedView == terminal"
  },
  {
    "key": "cmd+2",
    "command": "workbench.action.terminal.focusAtIndex2",
    "when": "focusedView == terminal"
  },
  {
    "key": "cmd+3",
    "command": "workbench.action.terminal.focusAtIndex3",
    "when": "focusedView == terminal"
  },
  {
    "key": "cmd+4",
    "command": "workbench.action.terminal.focusAtIndex4",
    "when": "focusedView == terminal"
  },
  {
    "key": "cmd+5",
    "command": "workbench.action.terminal.focusAtIndex5",
    "when": "focusedView == terminal"
  },
  {
    "key": "cmd+6",
    "command": "workbench.action.terminal.focusAtIndex6",
    "when": "focusedView == terminal"
  },
  {
    "key": "cmd+7",
    "command": "workbench.action.terminal.focusAtIndex7",
    "when": "focusedView == terminal"
  },
  {
    "key": "cmd+8",
    "command": "workbench.action.terminal.focusAtIndex8",
    "when": "focusedView == terminal"
  },
  {
    "key": "cmd+9",
    "command": "workbench.action.terminal.focusAtIndex9",
    "when": "focusedView == terminal"
  },

  // Explorer file/folder actions
  {
    "key": "n",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+n",
    "command": "explorer.newFolder",
    "when": "explorerViewletFocus && !inputFocus"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "filesExplorerFocus && !inputFocus"
  },

  // Other
  {
    "key": "enter",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible && !isComposing"
  },

  // Rename symbol
  {
    "key": "cmd+r",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "f2",
    "command": "-editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },

  // Refactor
  {
    "key": "shift+cmd+r",
    "command": "editor.action.refactor",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },

  // Restart vscode
  {
    "key": "shift+alt+r",
    "command": "workbench.action.reloadWindow"
  },

  // Find by arrows
  {
    "key": "alt+down",
    "command": "-history.showNext",
    "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
  },
  {
    "key": "alt+down",
    "command": "editor.action.nextMatchFindAction",
    "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
  },
  {
    "key": "alt+up",
    "command": "-history.showPrevious",
    "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
  },
  {
    "key": "alt+up",
    "command": "editor.action.previousMatchFindAction",
    "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible"
  }
]
